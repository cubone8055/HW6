# -*- coding: utf-8 -*-
"""Copy of HW6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rcjG95Hpl9sxZGPxPoymIvARmF9QellN
"""

import pandas as pd
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')

"""##Q2
Please follow the instructions below and inspect the outputs before you proceed. You can always check this original final to compare your results in your own copy.
"""

#You have to make sure that you were able to write the file to a csv while your were working in R
house=pd.read_csv('/content/drive/MyDrive/DATA/house_prices.csv')
house.head()

"""a) For the states below, please select the rows from the house dataframe, and consider converting the date column to date data type as it may be coming in string format. Then use the head function to preview your new dataframe."""

states = ['Michigan', 'California', 'Texas', 'Indiana']
houses = house[house['state'].isin(states)]
houses['date']= pd.to_datetime(houses['date'])
houses.head()

"""b) Use the FacetGrid from seaborn to create line plots to represent house_price_index for each state. Please make the line color red, set ticks on x axis for years ['1980', '2000', '2020'], which you may have to convert date type again, put those years as labels, and set the titles for each small plot to their state names. In addition, set the y label to 'house price index' and remove the x label since it's obvious that these are years."""

#your code goes here
stateplot = sns.FacetGrid(houses, col="state")
stateplot.map(sns.lineplot, "date", "house_price_index", color='r')
stateplot.set(xticks=[pd.datetime(1980, 1, 1), pd.datetime(2000, 1, 1), pd.datetime(2020, 1, 1)])
stateplot.set_xticklabels(['1980', '2000', '2020'])
stateplot.set_xlabels("")
stateplot.set_ylabels("house price index")
stateplot.set_titles(col_template="{col_name}")

"""c) Draw a lineplot for 'house price perc', but color them based on the 'state' name which will have four lines in a single plot. Set a legend which will be at the bottom of your graph and have them horizantally positioned next to eachother. Again, set the y label to house_price_perc and remove the x label since it's obvious. (Note that my y label is still showing index. Please ignore that.)"""

houseline = sns.lineplot(data=houses, x="date", y="house_price_perc", hue="state")
houseline.legend(loc='lower center',  ncol=4)
houseline.set_xlabel("")

"""##Q4
Please work on your 2nd question below. Please feel free to add new code cells.
"""

#Your code goes here.
world_cup = pd.read_csv('/content/drive/MyDrive/DATA/WorldCupMatches.csv')
world_cup.head()

from pandas.core.frame import DataFrame
#your code goes here. Just leaving an example output of an intermediate step for you to check the last two columns
weight = world_cup.groupby(['Home Team Initials', 'Away Team Initials'])['Home Team Initials'].count()
home_goal_total = world_cup.groupby(['Home Team Initials', 'Away Team Initials'])['Home Team Goals'].sum()
home_goal_total.head()

weight.head()

#team_pairs = pd.merge(weight, home_goal_total)
#team_pairs = home_goal_total.join(weight)
team_pairs = pd.merge(home_goal_total, weight, left_index=True, right_index=True)
team_pairs.columns = ['Home Goal Total', 'Weight']
team_pairs.head()

"""Make sure that you only write four columns ('Home Team Initials', 'Away Team Initials', 'weight', 'HomeGoalTotal') from the data frame, team_pairs, to a csv file"""

team_pairs.to_csv()